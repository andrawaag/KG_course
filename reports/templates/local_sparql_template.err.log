Traceback (most recent call last):
  File "/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/nbclient/client.py", line 1314, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/jupyter_core/utils/__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/asyncio/base_events.py", line 687, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
from rdflib import Graph
from urllib.request import urlretrieve
import zipfile
import pandas as pd

g = Graph()
g.parse("https://data.wikipathways.org/current/rdf/wikipathways-rdf-void.ttl")
downloadURL_query = """
PREFIX dcat:     <http://www.w3.org/ns/dcat#>

SELECT DISTINCT ?url
WHERE {
  [] dcat:downloadURL ?url .
}
"""

qres = g.query(downloadURL_query)
for row in qres:
    url = row.url
    prefix, delim, filename = url.rpartition('/')
    print(f"{url} -> {filename}")
    urlretrieve(url, filename)
    with zipfile.ZipFile(filename, mode="r") as archive:
        for file in archive.namelist():
            if file.endswith(".ttl"):
                print(f"reading {file}")
                ttl_file = zipfile.Path(filename, file)
                g.parse(data=ttl_file.read_text())
------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mModuleNotFoundError[0m                       Traceback (most recent call last)
Cell [0;32mIn[1], line 1[0m
[0;32m----> 1[0m [38;5;28;01mfrom[39;00m [38;5;21;01mrdflib[39;00m [38;5;28;01mimport[39;00m Graph
[1;32m      2[0m [38;5;28;01mfrom[39;00m [38;5;21;01murllib[39;00m[38;5;21;01m.[39;00m[38;5;21;01mrequest[39;00m [38;5;28;01mimport[39;00m urlretrieve
[1;32m      3[0m [38;5;28;01mimport[39;00m [38;5;21;01mzipfile[39;00m

[0;31mModuleNotFoundError[0m: No module named 'rdflib'

